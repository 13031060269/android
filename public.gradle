apply plugin: PublicXmlPlugin

class PublicXmlPlugin implements Plugin<Project> {
    @Override
    void apply(Project project) {
        Properties properties = new Properties()
        InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
        properties.load(inputStream)
        def sdkDir = properties.getProperty('sdk.dir')
        def task = { variant ->
            def publicXml = project.tasks.create("publicXml${variant.name.capitalize()}") {
                description "publicXml"
                group "hfax"
                doLast {
                    def mergeResources = variant.getMergeResourcesProvider().get()
                    String mergeResourcesOutPath = mergeResources.outputDir.get().getAsFile().absolutePath
                    String publicXml = "${project.android.sourceSets.main.res.srcDirs.first().absolutePath}/values/public.xml"
                    String aapt2 = "$sdkDir/build-tools/${project.android.getBuildToolsVersion()}/aapt2"
                    "$aapt2 compile -o  $mergeResourcesOutPath $publicXml".execute().waitFor()
                    if (!project.file(mergeResourcesOutPath + "/values_public.arsc.flat").exists()) {
                        throw new FileNotFoundException("values_public.arsc.flat 文件未生成")
                    }
                }
            }
            mergeResources.finalizedBy publicXml
        }
        if (project.android.hasProperty("applicationVariants")) {
            project.android.applicationVariants.all task
        } else {
            project.android.libraryVariants.all task
        }
    }
}